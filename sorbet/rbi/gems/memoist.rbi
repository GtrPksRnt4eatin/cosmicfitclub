# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/memoist/all/memoist.rbi
#
# memoist-0.16.0

module Memoist
  def all_memoized_structs; end
  def clear_structs; end
  def memoize(*method_names); end
  def self.escape_punctuation(string); end
  def self.extended(extender); end
  def self.extract_reload!(method, args); end
  def self.memoist_eval(klass, *args, &block); end
  def self.memoized_ivar_for(method_name, identifier = nil); end
  def self.memoized_prefix(identifier = nil); end
  def self.unmemoized_method_for(method_name, identifier = nil); end
  def self.unmemoized_prefix(identifier = nil); end
end
module Kernel
end
module Memoist::InstanceMethods
  def flush_cache(*method_names); end
  def memoize_all; end
  def memoized_structs(names); end
  def prime_cache(*method_names); end
  def unmemoize_all; end
end
class Memoist::MemoizedMethod < Struct
  def arity; end
  def arity=(_); end
  def ivar; end
  def ivar=(_); end
  def memoized_method; end
  def memoized_method=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
