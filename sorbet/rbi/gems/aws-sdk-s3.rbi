# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/aws-sdk-s3/all/aws-sdk-s3.rbi
#
# aws-sdk-s3-1.8.2

module Aws::S3
end
module Aws::S3::Types
end
class Anonymous_Struct_105 < Struct
  def days_after_initiation; end
  def days_after_initiation=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::AbortIncompleteMultipartUpload < Anonymous_Struct_105
  include Aws::Structure
end
class Anonymous_Struct_106 < Struct
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::AbortMultipartUploadOutput < Anonymous_Struct_106
  include Aws::Structure
end
class Anonymous_Struct_107 < Struct
  def bucket; end
  def bucket=(_); end
  def key; end
  def key=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def upload_id; end
  def upload_id=(_); end
end
class Aws::S3::Types::AbortMultipartUploadRequest < Anonymous_Struct_107
  include Aws::Structure
end
class Anonymous_Struct_108 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
end
class Aws::S3::Types::AccelerateConfiguration < Anonymous_Struct_108
  include Aws::Structure
end
class Anonymous_Struct_109 < Struct
  def grants; end
  def grants=(_); end
  def owner; end
  def owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::AccessControlPolicy < Anonymous_Struct_109
  include Aws::Structure
end
class Anonymous_Struct_110 < Struct
  def owner; end
  def owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::AccessControlTranslation < Anonymous_Struct_110
  include Aws::Structure
end
class Anonymous_Struct_111 < Struct
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def tags; end
  def tags=(_); end
end
class Aws::S3::Types::AnalyticsAndOperator < Anonymous_Struct_111
  include Aws::Structure
end
class Anonymous_Struct_112 < Struct
  def filter; end
  def filter=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def storage_class_analysis; end
  def storage_class_analysis=(_); end
end
class Aws::S3::Types::AnalyticsConfiguration < Anonymous_Struct_112
  include Aws::Structure
end
class Anonymous_Struct_113 < Struct
  def s3_bucket_destination; end
  def s3_bucket_destination=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::AnalyticsExportDestination < Anonymous_Struct_113
  include Aws::Structure
end
class Anonymous_Struct_114 < Struct
  def and; end
  def and=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def tag; end
  def tag=(_); end
end
class Aws::S3::Types::AnalyticsFilter < Anonymous_Struct_114
  include Aws::Structure
end
class Anonymous_Struct_115 < Struct
  def bucket; end
  def bucket=(_); end
  def bucket_account_id; end
  def bucket_account_id=(_); end
  def format; end
  def format=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::AnalyticsS3BucketDestination < Anonymous_Struct_115
  include Aws::Structure
end
class Anonymous_Struct_116 < Struct
  def creation_date; end
  def creation_date=(_); end
  def name; end
  def name=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Bucket < Anonymous_Struct_116
  include Aws::Structure
end
class Anonymous_Struct_117 < Struct
  def rules; end
  def rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::BucketLifecycleConfiguration < Anonymous_Struct_117
  include Aws::Structure
end
class Anonymous_Struct_118 < Struct
  def logging_enabled; end
  def logging_enabled=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::BucketLoggingStatus < Anonymous_Struct_118
  include Aws::Structure
end
class Anonymous_Struct_119 < Struct
  def cors_rules; end
  def cors_rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CORSConfiguration < Anonymous_Struct_119
  include Aws::Structure
end
class Anonymous_Struct_120 < Struct
  def allowed_headers; end
  def allowed_headers=(_); end
  def allowed_methods; end
  def allowed_methods=(_); end
  def allowed_origins; end
  def allowed_origins=(_); end
  def expose_headers; end
  def expose_headers=(_); end
  def max_age_seconds; end
  def max_age_seconds=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CORSRule < Anonymous_Struct_120
  include Aws::Structure
end
class Anonymous_Struct_121 < Struct
  def comments; end
  def comments=(_); end
  def field_delimiter; end
  def field_delimiter=(_); end
  def file_header_info; end
  def file_header_info=(_); end
  def quote_character; end
  def quote_character=(_); end
  def quote_escape_character; end
  def quote_escape_character=(_); end
  def record_delimiter; end
  def record_delimiter=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CSVInput < Anonymous_Struct_121
  include Aws::Structure
end
class Anonymous_Struct_122 < Struct
  def field_delimiter; end
  def field_delimiter=(_); end
  def quote_character; end
  def quote_character=(_); end
  def quote_escape_character; end
  def quote_escape_character=(_); end
  def quote_fields; end
  def quote_fields=(_); end
  def record_delimiter; end
  def record_delimiter=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CSVOutput < Anonymous_Struct_122
  include Aws::Structure
end
class Anonymous_Struct_123 < Struct
  def cloud_function; end
  def cloud_function=(_); end
  def event; end
  def event=(_); end
  def events; end
  def events=(_); end
  def id; end
  def id=(_); end
  def invocation_role; end
  def invocation_role=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CloudFunctionConfiguration < Anonymous_Struct_123
  include Aws::Structure
end
class Anonymous_Struct_124 < Struct
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CommonPrefix < Anonymous_Struct_124
  include Aws::Structure
end
class Anonymous_Struct_125 < Struct
  def bucket; end
  def bucket=(_); end
  def etag; end
  def etag=(_); end
  def expiration; end
  def expiration=(_); end
  def key; end
  def key=(_); end
  def location; end
  def location=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::CompleteMultipartUploadOutput < Anonymous_Struct_125
  include Aws::Structure
end
class Anonymous_Struct_126 < Struct
  def bucket; end
  def bucket=(_); end
  def key; end
  def key=(_); end
  def multipart_upload; end
  def multipart_upload=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def upload_id; end
  def upload_id=(_); end
end
class Aws::S3::Types::CompleteMultipartUploadRequest < Anonymous_Struct_126
  include Aws::Structure
end
class Anonymous_Struct_127 < Struct
  def parts; end
  def parts=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CompletedMultipartUpload < Anonymous_Struct_127
  include Aws::Structure
end
class Anonymous_Struct_128 < Struct
  def etag; end
  def etag=(_); end
  def part_number; end
  def part_number=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CompletedPart < Anonymous_Struct_128
  include Aws::Structure
end
class Anonymous_Struct_129 < Struct
  def http_error_code_returned_equals; end
  def http_error_code_returned_equals=(_); end
  def key_prefix_equals; end
  def key_prefix_equals=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Condition < Anonymous_Struct_129
  include Aws::Structure
end
class Anonymous_Struct_130 < Struct
  def copy_object_result; end
  def copy_object_result=(_); end
  def copy_source_version_id; end
  def copy_source_version_id=(_); end
  def expiration; end
  def expiration=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::CopyObjectOutput < Anonymous_Struct_130
  include Aws::Structure
end
class Anonymous_Struct_131 < Struct
  def acl; end
  def acl=(_); end
  def bucket; end
  def bucket=(_); end
  def cache_control; end
  def cache_control=(_); end
  def content_disposition; end
  def content_disposition=(_); end
  def content_encoding; end
  def content_encoding=(_); end
  def content_language; end
  def content_language=(_); end
  def content_type; end
  def content_type=(_); end
  def copy_source; end
  def copy_source=(_); end
  def copy_source_if_match; end
  def copy_source_if_match=(_); end
  def copy_source_if_modified_since; end
  def copy_source_if_modified_since=(_); end
  def copy_source_if_none_match; end
  def copy_source_if_none_match=(_); end
  def copy_source_if_unmodified_since; end
  def copy_source_if_unmodified_since=(_); end
  def copy_source_sse_customer_algorithm; end
  def copy_source_sse_customer_algorithm=(_); end
  def copy_source_sse_customer_key; end
  def copy_source_sse_customer_key=(_); end
  def copy_source_sse_customer_key_md5; end
  def copy_source_sse_customer_key_md5=(_); end
  def expires; end
  def expires=(_); end
  def grant_full_control; end
  def grant_full_control=(_); end
  def grant_read; end
  def grant_read=(_); end
  def grant_read_acp; end
  def grant_read_acp=(_); end
  def grant_write_acp; end
  def grant_write_acp=(_); end
  def key; end
  def key=(_); end
  def metadata; end
  def metadata=(_); end
  def metadata_directive; end
  def metadata_directive=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key; end
  def sse_customer_key=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def storage_class; end
  def storage_class=(_); end
  def tagging; end
  def tagging=(_); end
  def tagging_directive; end
  def tagging_directive=(_); end
  def website_redirect_location; end
  def website_redirect_location=(_); end
end
class Aws::S3::Types::CopyObjectRequest < Anonymous_Struct_131
  include Aws::Structure
end
class Anonymous_Struct_132 < Struct
  def etag; end
  def etag=(_); end
  def last_modified; end
  def last_modified=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CopyObjectResult < Anonymous_Struct_132
  include Aws::Structure
end
class Anonymous_Struct_133 < Struct
  def etag; end
  def etag=(_); end
  def last_modified; end
  def last_modified=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CopyPartResult < Anonymous_Struct_133
  include Aws::Structure
end
class Anonymous_Struct_134 < Struct
  def location_constraint; end
  def location_constraint=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CreateBucketConfiguration < Anonymous_Struct_134
  include Aws::Structure
end
class Anonymous_Struct_135 < Struct
  def location; end
  def location=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CreateBucketOutput < Anonymous_Struct_135
  include Aws::Structure
end
class Anonymous_Struct_136 < Struct
  def acl; end
  def acl=(_); end
  def bucket; end
  def bucket=(_); end
  def create_bucket_configuration; end
  def create_bucket_configuration=(_); end
  def grant_full_control; end
  def grant_full_control=(_); end
  def grant_read; end
  def grant_read=(_); end
  def grant_read_acp; end
  def grant_read_acp=(_); end
  def grant_write; end
  def grant_write=(_); end
  def grant_write_acp; end
  def grant_write_acp=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CreateBucketRequest < Anonymous_Struct_136
  include Aws::Structure
end
class Anonymous_Struct_137 < Struct
  def abort_date; end
  def abort_date=(_); end
  def abort_rule_id; end
  def abort_rule_id=(_); end
  def bucket; end
  def bucket=(_); end
  def key; end
  def key=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def upload_id; end
  def upload_id=(_); end
end
class Aws::S3::Types::CreateMultipartUploadOutput < Anonymous_Struct_137
  include Aws::Structure
end
class Anonymous_Struct_138 < Struct
  def acl; end
  def acl=(_); end
  def bucket; end
  def bucket=(_); end
  def cache_control; end
  def cache_control=(_); end
  def content_disposition; end
  def content_disposition=(_); end
  def content_encoding; end
  def content_encoding=(_); end
  def content_language; end
  def content_language=(_); end
  def content_type; end
  def content_type=(_); end
  def expires; end
  def expires=(_); end
  def grant_full_control; end
  def grant_full_control=(_); end
  def grant_read; end
  def grant_read=(_); end
  def grant_read_acp; end
  def grant_read_acp=(_); end
  def grant_write_acp; end
  def grant_write_acp=(_); end
  def key; end
  def key=(_); end
  def metadata; end
  def metadata=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key; end
  def sse_customer_key=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def storage_class; end
  def storage_class=(_); end
  def tagging; end
  def tagging=(_); end
  def website_redirect_location; end
  def website_redirect_location=(_); end
end
class Aws::S3::Types::CreateMultipartUploadRequest < Anonymous_Struct_138
  include Aws::Structure
end
class Anonymous_Struct_139 < Struct
  def objects; end
  def objects=(_); end
  def quiet; end
  def quiet=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Delete < Anonymous_Struct_139
  include Aws::Structure
end
class Anonymous_Struct_140 < Struct
  def bucket; end
  def bucket=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketAnalyticsConfigurationRequest < Anonymous_Struct_140
  include Aws::Structure
end
class Anonymous_Struct_141 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketCorsRequest < Anonymous_Struct_141
  include Aws::Structure
end
class Anonymous_Struct_142 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketEncryptionRequest < Anonymous_Struct_142
  include Aws::Structure
end
class Anonymous_Struct_143 < Struct
  def bucket; end
  def bucket=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketInventoryConfigurationRequest < Anonymous_Struct_143
  include Aws::Structure
end
class Anonymous_Struct_144 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketLifecycleRequest < Anonymous_Struct_144
  include Aws::Structure
end
class Anonymous_Struct_145 < Struct
  def bucket; end
  def bucket=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketMetricsConfigurationRequest < Anonymous_Struct_145
  include Aws::Structure
end
class Anonymous_Struct_146 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketPolicyRequest < Anonymous_Struct_146
  include Aws::Structure
end
class Anonymous_Struct_147 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketReplicationRequest < Anonymous_Struct_147
  include Aws::Structure
end
class Anonymous_Struct_148 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketRequest < Anonymous_Struct_148
  include Aws::Structure
end
class Anonymous_Struct_149 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketTaggingRequest < Anonymous_Struct_149
  include Aws::Structure
end
class Anonymous_Struct_150 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketWebsiteRequest < Anonymous_Struct_150
  include Aws::Structure
end
class Anonymous_Struct_151 < Struct
  def is_latest; end
  def is_latest=(_); end
  def key; end
  def key=(_); end
  def last_modified; end
  def last_modified=(_); end
  def owner; end
  def owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::DeleteMarkerEntry < Anonymous_Struct_151
  include Aws::Structure
end
class Anonymous_Struct_152 < Struct
  def delete_marker; end
  def delete_marker=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::DeleteObjectOutput < Anonymous_Struct_152
  include Aws::Structure
end
class Anonymous_Struct_153 < Struct
  def bucket; end
  def bucket=(_); end
  def key; end
  def key=(_); end
  def mfa; end
  def mfa=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::DeleteObjectRequest < Anonymous_Struct_153
  include Aws::Structure
end
class Anonymous_Struct_154 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::DeleteObjectTaggingOutput < Anonymous_Struct_154
  include Aws::Structure
end
class Anonymous_Struct_155 < Struct
  def bucket; end
  def bucket=(_); end
  def key; end
  def key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::DeleteObjectTaggingRequest < Anonymous_Struct_155
  include Aws::Structure
end
class Anonymous_Struct_156 < Struct
  def deleted; end
  def deleted=(_); end
  def errors; end
  def errors=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteObjectsOutput < Anonymous_Struct_156
  include Aws::Structure
end
class Anonymous_Struct_157 < Struct
  def bucket; end
  def bucket=(_); end
  def delete; end
  def delete=(_); end
  def mfa; end
  def mfa=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteObjectsRequest < Anonymous_Struct_157
  include Aws::Structure
end
class Anonymous_Struct_158 < Struct
  def delete_marker; end
  def delete_marker=(_); end
  def delete_marker_version_id; end
  def delete_marker_version_id=(_); end
  def key; end
  def key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::DeletedObject < Anonymous_Struct_158
  include Aws::Structure
end
class Anonymous_Struct_159 < Struct
  def access_control_translation; end
  def access_control_translation=(_); end
  def account; end
  def account=(_); end
  def bucket; end
  def bucket=(_); end
  def encryption_configuration; end
  def encryption_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def storage_class; end
  def storage_class=(_); end
end
class Aws::S3::Types::Destination < Anonymous_Struct_159
  include Aws::Structure
end
class Anonymous_Struct_160 < Struct
  def encryption_type; end
  def encryption_type=(_); end
  def kms_context; end
  def kms_context=(_); end
  def kms_key_id; end
  def kms_key_id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Encryption < Anonymous_Struct_160
  include Aws::Structure
end
class Anonymous_Struct_161 < Struct
  def replica_kms_key_id; end
  def replica_kms_key_id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::EncryptionConfiguration < Anonymous_Struct_161
  include Aws::Structure
end
class Anonymous_Struct_162 < Struct
  def code; end
  def code=(_); end
  def key; end
  def key=(_); end
  def message; end
  def message=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::Error < Anonymous_Struct_162
  include Aws::Structure
end
class Anonymous_Struct_163 < Struct
  def key; end
  def key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ErrorDocument < Anonymous_Struct_163
  include Aws::Structure
end
class Anonymous_Struct_164 < Struct
  def name; end
  def name=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def value; end
  def value=(_); end
end
class Aws::S3::Types::FilterRule < Anonymous_Struct_164
  include Aws::Structure
end
class Anonymous_Struct_165 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
end
class Aws::S3::Types::GetBucketAccelerateConfigurationOutput < Anonymous_Struct_165
  include Aws::Structure
end
class Anonymous_Struct_166 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketAccelerateConfigurationRequest < Anonymous_Struct_166
  include Aws::Structure
end
class Anonymous_Struct_167 < Struct
  def grants; end
  def grants=(_); end
  def owner; end
  def owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketAclOutput < Anonymous_Struct_167
  include Aws::Structure
end
class Anonymous_Struct_168 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketAclRequest < Anonymous_Struct_168
  include Aws::Structure
end
class Anonymous_Struct_169 < Struct
  def analytics_configuration; end
  def analytics_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketAnalyticsConfigurationOutput < Anonymous_Struct_169
  include Aws::Structure
end
class Anonymous_Struct_170 < Struct
  def bucket; end
  def bucket=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketAnalyticsConfigurationRequest < Anonymous_Struct_170
  include Aws::Structure
end
class Anonymous_Struct_171 < Struct
  def cors_rules; end
  def cors_rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketCorsOutput < Anonymous_Struct_171
  include Aws::Structure
end
class Anonymous_Struct_172 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketCorsRequest < Anonymous_Struct_172
  include Aws::Structure
end
class Anonymous_Struct_173 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption_configuration; end
  def server_side_encryption_configuration=(_); end
end
class Aws::S3::Types::GetBucketEncryptionOutput < Anonymous_Struct_173
  include Aws::Structure
end
class Anonymous_Struct_174 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketEncryptionRequest < Anonymous_Struct_174
  include Aws::Structure
end
class Anonymous_Struct_175 < Struct
  def inventory_configuration; end
  def inventory_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketInventoryConfigurationOutput < Anonymous_Struct_175
  include Aws::Structure
end
class Anonymous_Struct_176 < Struct
  def bucket; end
  def bucket=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketInventoryConfigurationRequest < Anonymous_Struct_176
  include Aws::Structure
end
class Anonymous_Struct_177 < Struct
  def rules; end
  def rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketLifecycleConfigurationOutput < Anonymous_Struct_177
  include Aws::Structure
end
class Anonymous_Struct_178 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketLifecycleConfigurationRequest < Anonymous_Struct_178
  include Aws::Structure
end
class Anonymous_Struct_179 < Struct
  def rules; end
  def rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketLifecycleOutput < Anonymous_Struct_179
  include Aws::Structure
end
class Anonymous_Struct_180 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketLifecycleRequest < Anonymous_Struct_180
  include Aws::Structure
end
class Anonymous_Struct_181 < Struct
  def location_constraint; end
  def location_constraint=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketLocationOutput < Anonymous_Struct_181
  include Aws::Structure
end
class Anonymous_Struct_182 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketLocationRequest < Anonymous_Struct_182
  include Aws::Structure
end
class Anonymous_Struct_183 < Struct
  def logging_enabled; end
  def logging_enabled=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketLoggingOutput < Anonymous_Struct_183
  include Aws::Structure
end
class Anonymous_Struct_184 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketLoggingRequest < Anonymous_Struct_184
  include Aws::Structure
end
class Anonymous_Struct_185 < Struct
  def metrics_configuration; end
  def metrics_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketMetricsConfigurationOutput < Anonymous_Struct_185
  include Aws::Structure
end
class Anonymous_Struct_186 < Struct
  def bucket; end
  def bucket=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketMetricsConfigurationRequest < Anonymous_Struct_186
  include Aws::Structure
end
class Anonymous_Struct_187 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketNotificationConfigurationRequest < Anonymous_Struct_187
  include Aws::Structure
end
class Anonymous_Struct_188 < Struct
  def policy; end
  def policy=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketPolicyOutput < Anonymous_Struct_188
  include Aws::Structure
end
class Anonymous_Struct_189 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketPolicyRequest < Anonymous_Struct_189
  include Aws::Structure
end
class Anonymous_Struct_190 < Struct
  def replication_configuration; end
  def replication_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketReplicationOutput < Anonymous_Struct_190
  include Aws::Structure
end
class Anonymous_Struct_191 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketReplicationRequest < Anonymous_Struct_191
  include Aws::Structure
end
class Anonymous_Struct_192 < Struct
  def payer; end
  def payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketRequestPaymentOutput < Anonymous_Struct_192
  include Aws::Structure
end
class Anonymous_Struct_193 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketRequestPaymentRequest < Anonymous_Struct_193
  include Aws::Structure
end
class Anonymous_Struct_194 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def tag_set; end
  def tag_set=(_); end
end
class Aws::S3::Types::GetBucketTaggingOutput < Anonymous_Struct_194
  include Aws::Structure
end
class Anonymous_Struct_195 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketTaggingRequest < Anonymous_Struct_195
  include Aws::Structure
end
class Anonymous_Struct_196 < Struct
  def mfa_delete; end
  def mfa_delete=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
end
class Aws::S3::Types::GetBucketVersioningOutput < Anonymous_Struct_196
  include Aws::Structure
end
class Anonymous_Struct_197 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketVersioningRequest < Anonymous_Struct_197
  include Aws::Structure
end
class Anonymous_Struct_198 < Struct
  def error_document; end
  def error_document=(_); end
  def index_document; end
  def index_document=(_); end
  def redirect_all_requests_to; end
  def redirect_all_requests_to=(_); end
  def routing_rules; end
  def routing_rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketWebsiteOutput < Anonymous_Struct_198
  include Aws::Structure
end
class Anonymous_Struct_199 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketWebsiteRequest < Anonymous_Struct_199
  include Aws::Structure
end
class Anonymous_Struct_200 < Struct
  def grants; end
  def grants=(_); end
  def owner; end
  def owner=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetObjectAclOutput < Anonymous_Struct_200
  include Aws::Structure
end
class Anonymous_Struct_201 < Struct
  def bucket; end
  def bucket=(_); end
  def key; end
  def key=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::GetObjectAclRequest < Anonymous_Struct_201
  include Aws::Structure
end
class Anonymous_Struct_202 < Struct
  def accept_ranges; end
  def accept_ranges=(_); end
  def body; end
  def body=(_); end
  def cache_control; end
  def cache_control=(_); end
  def content_disposition; end
  def content_disposition=(_); end
  def content_encoding; end
  def content_encoding=(_); end
  def content_language; end
  def content_language=(_); end
  def content_length; end
  def content_length=(_); end
  def content_range; end
  def content_range=(_); end
  def content_type; end
  def content_type=(_); end
  def delete_marker; end
  def delete_marker=(_); end
  def etag; end
  def etag=(_); end
  def expiration; end
  def expiration=(_); end
  def expires; end
  def expires=(_); end
  def expires_string; end
  def expires_string=(_); end
  def last_modified; end
  def last_modified=(_); end
  def metadata; end
  def metadata=(_); end
  def missing_meta; end
  def missing_meta=(_); end
  def parts_count; end
  def parts_count=(_); end
  def replication_status; end
  def replication_status=(_); end
  def request_charged; end
  def request_charged=(_); end
  def restore; end
  def restore=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def storage_class; end
  def storage_class=(_); end
  def tag_count; end
  def tag_count=(_); end
  def version_id; end
  def version_id=(_); end
  def website_redirect_location; end
  def website_redirect_location=(_); end
end
class Aws::S3::Types::GetObjectOutput < Anonymous_Struct_202
  include Aws::Structure
end
class Anonymous_Struct_203 < Struct
  def bucket; end
  def bucket=(_); end
  def if_match; end
  def if_match=(_); end
  def if_modified_since; end
  def if_modified_since=(_); end
  def if_none_match; end
  def if_none_match=(_); end
  def if_unmodified_since; end
  def if_unmodified_since=(_); end
  def key; end
  def key=(_); end
  def part_number; end
  def part_number=(_); end
  def range; end
  def range=(_); end
  def request_payer; end
  def request_payer=(_); end
  def response_cache_control; end
  def response_cache_control=(_); end
  def response_content_disposition; end
  def response_content_disposition=(_); end
  def response_content_encoding; end
  def response_content_encoding=(_); end
  def response_content_language; end
  def response_content_language=(_); end
  def response_content_type; end
  def response_content_type=(_); end
  def response_expires; end
  def response_expires=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key; end
  def sse_customer_key=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::GetObjectRequest < Anonymous_Struct_203
  include Aws::Structure
end
class Anonymous_Struct_204 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def tag_set; end
  def tag_set=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::GetObjectTaggingOutput < Anonymous_Struct_204
  include Aws::Structure
end
class Anonymous_Struct_205 < Struct
  def bucket; end
  def bucket=(_); end
  def key; end
  def key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::GetObjectTaggingRequest < Anonymous_Struct_205
  include Aws::Structure
end
class Anonymous_Struct_206 < Struct
  def body; end
  def body=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetObjectTorrentOutput < Anonymous_Struct_206
  include Aws::Structure
end
class Anonymous_Struct_207 < Struct
  def bucket; end
  def bucket=(_); end
  def key; end
  def key=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetObjectTorrentRequest < Anonymous_Struct_207
  include Aws::Structure
end
class Anonymous_Struct_208 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def tier; end
  def tier=(_); end
end
class Aws::S3::Types::GlacierJobParameters < Anonymous_Struct_208
  include Aws::Structure
end
class Anonymous_Struct_209 < Struct
  def grantee; end
  def grantee=(_); end
  def permission; end
  def permission=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Grant < Anonymous_Struct_209
  include Aws::Structure
end
class Anonymous_Struct_210 < Struct
  def display_name; end
  def display_name=(_); end
  def email_address; end
  def email_address=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def type; end
  def type=(_); end
  def uri; end
  def uri=(_); end
end
class Aws::S3::Types::Grantee < Anonymous_Struct_210
  include Aws::Structure
end
class Anonymous_Struct_211 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::HeadBucketRequest < Anonymous_Struct_211
  include Aws::Structure
end
class Anonymous_Struct_212 < Struct
  def accept_ranges; end
  def accept_ranges=(_); end
  def cache_control; end
  def cache_control=(_); end
  def content_disposition; end
  def content_disposition=(_); end
  def content_encoding; end
  def content_encoding=(_); end
  def content_language; end
  def content_language=(_); end
  def content_length; end
  def content_length=(_); end
  def content_type; end
  def content_type=(_); end
  def delete_marker; end
  def delete_marker=(_); end
  def etag; end
  def etag=(_); end
  def expiration; end
  def expiration=(_); end
  def expires; end
  def expires=(_); end
  def expires_string; end
  def expires_string=(_); end
  def last_modified; end
  def last_modified=(_); end
  def metadata; end
  def metadata=(_); end
  def missing_meta; end
  def missing_meta=(_); end
  def parts_count; end
  def parts_count=(_); end
  def replication_status; end
  def replication_status=(_); end
  def request_charged; end
  def request_charged=(_); end
  def restore; end
  def restore=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def storage_class; end
  def storage_class=(_); end
  def version_id; end
  def version_id=(_); end
  def website_redirect_location; end
  def website_redirect_location=(_); end
end
class Aws::S3::Types::HeadObjectOutput < Anonymous_Struct_212
  include Aws::Structure
end
class Anonymous_Struct_213 < Struct
  def bucket; end
  def bucket=(_); end
  def if_match; end
  def if_match=(_); end
  def if_modified_since; end
  def if_modified_since=(_); end
  def if_none_match; end
  def if_none_match=(_); end
  def if_unmodified_since; end
  def if_unmodified_since=(_); end
  def key; end
  def key=(_); end
  def part_number; end
  def part_number=(_); end
  def range; end
  def range=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key; end
  def sse_customer_key=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::HeadObjectRequest < Anonymous_Struct_213
  include Aws::Structure
end
class Anonymous_Struct_214 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def suffix; end
  def suffix=(_); end
end
class Aws::S3::Types::IndexDocument < Anonymous_Struct_214
  include Aws::Structure
end
class Anonymous_Struct_215 < Struct
  def display_name; end
  def display_name=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Initiator < Anonymous_Struct_215
  include Aws::Structure
end
class Anonymous_Struct_216 < Struct
  def csv; end
  def csv=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::InputSerialization < Anonymous_Struct_216
  include Aws::Structure
end
class Anonymous_Struct_217 < Struct
  def destination; end
  def destination=(_); end
  def filter; end
  def filter=(_); end
  def id; end
  def id=(_); end
  def included_object_versions; end
  def included_object_versions=(_); end
  def is_enabled; end
  def is_enabled=(_); end
  def optional_fields; end
  def optional_fields=(_); end
  def schedule; end
  def schedule=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::InventoryConfiguration < Anonymous_Struct_217
  include Aws::Structure
end
class Anonymous_Struct_218 < Struct
  def s3_bucket_destination; end
  def s3_bucket_destination=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::InventoryDestination < Anonymous_Struct_218
  include Aws::Structure
end
class Anonymous_Struct_219 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def ssekms; end
  def ssekms=(_); end
  def sses3; end
  def sses3=(_); end
end
class Aws::S3::Types::InventoryEncryption < Anonymous_Struct_219
  include Aws::Structure
end
class Anonymous_Struct_220 < Struct
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::InventoryFilter < Anonymous_Struct_220
  include Aws::Structure
end
class Anonymous_Struct_221 < Struct
  def account_id; end
  def account_id=(_); end
  def bucket; end
  def bucket=(_); end
  def encryption; end
  def encryption=(_); end
  def format; end
  def format=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::InventoryS3BucketDestination < Anonymous_Struct_221
  include Aws::Structure
end
class Anonymous_Struct_222 < Struct
  def frequency; end
  def frequency=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::InventorySchedule < Anonymous_Struct_222
  include Aws::Structure
end
class Anonymous_Struct_223 < Struct
  def events; end
  def events=(_); end
  def filter; end
  def filter=(_); end
  def id; end
  def id=(_); end
  def lambda_function_arn; end
  def lambda_function_arn=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::LambdaFunctionConfiguration < Anonymous_Struct_223
  include Aws::Structure
end
class Anonymous_Struct_224 < Struct
  def rules; end
  def rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::LifecycleConfiguration < Anonymous_Struct_224
  include Aws::Structure
end
class Anonymous_Struct_225 < Struct
  def date; end
  def date=(_); end
  def days; end
  def days=(_); end
  def expired_object_delete_marker; end
  def expired_object_delete_marker=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::LifecycleExpiration < Anonymous_Struct_225
  include Aws::Structure
end
class Anonymous_Struct_226 < Struct
  def abort_incomplete_multipart_upload; end
  def abort_incomplete_multipart_upload=(_); end
  def expiration; end
  def expiration=(_); end
  def filter; end
  def filter=(_); end
  def id; end
  def id=(_); end
  def noncurrent_version_expiration; end
  def noncurrent_version_expiration=(_); end
  def noncurrent_version_transitions; end
  def noncurrent_version_transitions=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
  def transitions; end
  def transitions=(_); end
end
class Aws::S3::Types::LifecycleRule < Anonymous_Struct_226
  include Aws::Structure
end
class Anonymous_Struct_227 < Struct
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def tags; end
  def tags=(_); end
end
class Aws::S3::Types::LifecycleRuleAndOperator < Anonymous_Struct_227
  include Aws::Structure
end
class Anonymous_Struct_228 < Struct
  def and; end
  def and=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def tag; end
  def tag=(_); end
end
class Aws::S3::Types::LifecycleRuleFilter < Anonymous_Struct_228
  include Aws::Structure
end
class Anonymous_Struct_229 < Struct
  def analytics_configuration_list; end
  def analytics_configuration_list=(_); end
  def continuation_token; end
  def continuation_token=(_); end
  def is_truncated; end
  def is_truncated=(_); end
  def next_continuation_token; end
  def next_continuation_token=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListBucketAnalyticsConfigurationsOutput < Anonymous_Struct_229
  include Aws::Structure
end
class Anonymous_Struct_230 < Struct
  def bucket; end
  def bucket=(_); end
  def continuation_token; end
  def continuation_token=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListBucketAnalyticsConfigurationsRequest < Anonymous_Struct_230
  include Aws::Structure
end
class Anonymous_Struct_231 < Struct
  def continuation_token; end
  def continuation_token=(_); end
  def inventory_configuration_list; end
  def inventory_configuration_list=(_); end
  def is_truncated; end
  def is_truncated=(_); end
  def next_continuation_token; end
  def next_continuation_token=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListBucketInventoryConfigurationsOutput < Anonymous_Struct_231
  include Aws::Structure
end
class Anonymous_Struct_232 < Struct
  def bucket; end
  def bucket=(_); end
  def continuation_token; end
  def continuation_token=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListBucketInventoryConfigurationsRequest < Anonymous_Struct_232
  include Aws::Structure
end
class Anonymous_Struct_233 < Struct
  def continuation_token; end
  def continuation_token=(_); end
  def is_truncated; end
  def is_truncated=(_); end
  def metrics_configuration_list; end
  def metrics_configuration_list=(_); end
  def next_continuation_token; end
  def next_continuation_token=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListBucketMetricsConfigurationsOutput < Anonymous_Struct_233
  include Aws::Structure
end
class Anonymous_Struct_234 < Struct
  def bucket; end
  def bucket=(_); end
  def continuation_token; end
  def continuation_token=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListBucketMetricsConfigurationsRequest < Anonymous_Struct_234
  include Aws::Structure
end
class Anonymous_Struct_235 < Struct
  def buckets; end
  def buckets=(_); end
  def owner; end
  def owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListBucketsOutput < Anonymous_Struct_235
  include Aws::Structure
end
class Anonymous_Struct_236 < Struct
  def bucket; end
  def bucket=(_); end
  def common_prefixes; end
  def common_prefixes=(_); end
  def delimiter; end
  def delimiter=(_); end
  def encoding_type; end
  def encoding_type=(_); end
  def is_truncated; end
  def is_truncated=(_); end
  def key_marker; end
  def key_marker=(_); end
  def max_uploads; end
  def max_uploads=(_); end
  def next_key_marker; end
  def next_key_marker=(_); end
  def next_upload_id_marker; end
  def next_upload_id_marker=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def upload_id_marker; end
  def upload_id_marker=(_); end
  def uploads; end
  def uploads=(_); end
end
class Aws::S3::Types::ListMultipartUploadsOutput < Anonymous_Struct_236
  include Aws::Structure
end
class Anonymous_Struct_237 < Struct
  def bucket; end
  def bucket=(_); end
  def delimiter; end
  def delimiter=(_); end
  def encoding_type; end
  def encoding_type=(_); end
  def key_marker; end
  def key_marker=(_); end
  def max_uploads; end
  def max_uploads=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def upload_id_marker; end
  def upload_id_marker=(_); end
end
class Aws::S3::Types::ListMultipartUploadsRequest < Anonymous_Struct_237
  include Aws::Structure
end
class Anonymous_Struct_238 < Struct
  def common_prefixes; end
  def common_prefixes=(_); end
  def delete_markers; end
  def delete_markers=(_); end
  def delimiter; end
  def delimiter=(_); end
  def encoding_type; end
  def encoding_type=(_); end
  def is_truncated; end
  def is_truncated=(_); end
  def key_marker; end
  def key_marker=(_); end
  def max_keys; end
  def max_keys=(_); end
  def name; end
  def name=(_); end
  def next_key_marker; end
  def next_key_marker=(_); end
  def next_version_id_marker; end
  def next_version_id_marker=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def version_id_marker; end
  def version_id_marker=(_); end
  def versions; end
  def versions=(_); end
end
class Aws::S3::Types::ListObjectVersionsOutput < Anonymous_Struct_238
  def versions_delete_markers; end
  include Aws::Structure
end
class Anonymous_Struct_239 < Struct
  def bucket; end
  def bucket=(_); end
  def delimiter; end
  def delimiter=(_); end
  def encoding_type; end
  def encoding_type=(_); end
  def key_marker; end
  def key_marker=(_); end
  def max_keys; end
  def max_keys=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def version_id_marker; end
  def version_id_marker=(_); end
end
class Aws::S3::Types::ListObjectVersionsRequest < Anonymous_Struct_239
  include Aws::Structure
end
class Anonymous_Struct_240 < Struct
  def common_prefixes; end
  def common_prefixes=(_); end
  def contents; end
  def contents=(_); end
  def delimiter; end
  def delimiter=(_); end
  def encoding_type; end
  def encoding_type=(_); end
  def is_truncated; end
  def is_truncated=(_); end
  def marker; end
  def marker=(_); end
  def max_keys; end
  def max_keys=(_); end
  def name; end
  def name=(_); end
  def next_marker; end
  def next_marker=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListObjectsOutput < Anonymous_Struct_240
  include Aws::Structure
end
class Anonymous_Struct_241 < Struct
  def bucket; end
  def bucket=(_); end
  def delimiter; end
  def delimiter=(_); end
  def encoding_type; end
  def encoding_type=(_); end
  def marker; end
  def marker=(_); end
  def max_keys; end
  def max_keys=(_); end
  def prefix; end
  def prefix=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListObjectsRequest < Anonymous_Struct_241
  include Aws::Structure
end
class Anonymous_Struct_242 < Struct
  def common_prefixes; end
  def common_prefixes=(_); end
  def contents; end
  def contents=(_); end
  def continuation_token; end
  def continuation_token=(_); end
  def delimiter; end
  def delimiter=(_); end
  def encoding_type; end
  def encoding_type=(_); end
  def is_truncated; end
  def is_truncated=(_); end
  def key_count; end
  def key_count=(_); end
  def max_keys; end
  def max_keys=(_); end
  def name; end
  def name=(_); end
  def next_continuation_token; end
  def next_continuation_token=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def start_after; end
  def start_after=(_); end
end
class Aws::S3::Types::ListObjectsV2Output < Anonymous_Struct_242
  include Aws::Structure
end
class Anonymous_Struct_243 < Struct
  def bucket; end
  def bucket=(_); end
  def continuation_token; end
  def continuation_token=(_); end
  def delimiter; end
  def delimiter=(_); end
  def encoding_type; end
  def encoding_type=(_); end
  def fetch_owner; end
  def fetch_owner=(_); end
  def max_keys; end
  def max_keys=(_); end
  def prefix; end
  def prefix=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def start_after; end
  def start_after=(_); end
end
class Aws::S3::Types::ListObjectsV2Request < Anonymous_Struct_243
  include Aws::Structure
end
class Anonymous_Struct_244 < Struct
  def abort_date; end
  def abort_date=(_); end
  def abort_rule_id; end
  def abort_rule_id=(_); end
  def bucket; end
  def bucket=(_); end
  def initiator; end
  def initiator=(_); end
  def is_truncated; end
  def is_truncated=(_); end
  def key; end
  def key=(_); end
  def max_parts; end
  def max_parts=(_); end
  def next_part_number_marker; end
  def next_part_number_marker=(_); end
  def owner; end
  def owner=(_); end
  def part_number_marker; end
  def part_number_marker=(_); end
  def parts; end
  def parts=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def storage_class; end
  def storage_class=(_); end
  def upload_id; end
  def upload_id=(_); end
end
class Aws::S3::Types::ListPartsOutput < Anonymous_Struct_244
  include Aws::Structure
end
class Anonymous_Struct_245 < Struct
  def bucket; end
  def bucket=(_); end
  def key; end
  def key=(_); end
  def max_parts; end
  def max_parts=(_); end
  def part_number_marker; end
  def part_number_marker=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def upload_id; end
  def upload_id=(_); end
end
class Aws::S3::Types::ListPartsRequest < Anonymous_Struct_245
  include Aws::Structure
end
class Anonymous_Struct_246 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def target_bucket; end
  def target_bucket=(_); end
  def target_grants; end
  def target_grants=(_); end
  def target_prefix; end
  def target_prefix=(_); end
end
class Aws::S3::Types::LoggingEnabled < Anonymous_Struct_246
  include Aws::Structure
end
class Anonymous_Struct_247 < Struct
  def name; end
  def name=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def value; end
  def value=(_); end
end
class Aws::S3::Types::MetadataEntry < Anonymous_Struct_247
  include Aws::Structure
end
class Anonymous_Struct_248 < Struct
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def tags; end
  def tags=(_); end
end
class Aws::S3::Types::MetricsAndOperator < Anonymous_Struct_248
  include Aws::Structure
end
class Anonymous_Struct_249 < Struct
  def filter; end
  def filter=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::MetricsConfiguration < Anonymous_Struct_249
  include Aws::Structure
end
class Anonymous_Struct_250 < Struct
  def and; end
  def and=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def tag; end
  def tag=(_); end
end
class Aws::S3::Types::MetricsFilter < Anonymous_Struct_250
  include Aws::Structure
end
class Anonymous_Struct_251 < Struct
  def initiated; end
  def initiated=(_); end
  def initiator; end
  def initiator=(_); end
  def key; end
  def key=(_); end
  def owner; end
  def owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def storage_class; end
  def storage_class=(_); end
  def upload_id; end
  def upload_id=(_); end
end
class Aws::S3::Types::MultipartUpload < Anonymous_Struct_251
  include Aws::Structure
end
class Anonymous_Struct_252 < Struct
  def noncurrent_days; end
  def noncurrent_days=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::NoncurrentVersionExpiration < Anonymous_Struct_252
  include Aws::Structure
end
class Anonymous_Struct_253 < Struct
  def noncurrent_days; end
  def noncurrent_days=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def storage_class; end
  def storage_class=(_); end
end
class Aws::S3::Types::NoncurrentVersionTransition < Anonymous_Struct_253
  include Aws::Structure
end
class Anonymous_Struct_254 < Struct
  def lambda_function_configurations; end
  def lambda_function_configurations=(_); end
  def queue_configurations; end
  def queue_configurations=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def topic_configurations; end
  def topic_configurations=(_); end
end
class Aws::S3::Types::NotificationConfiguration < Anonymous_Struct_254
  include Aws::Structure
end
class Anonymous_Struct_255 < Struct
  def cloud_function_configuration; end
  def cloud_function_configuration=(_); end
  def queue_configuration; end
  def queue_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def topic_configuration; end
  def topic_configuration=(_); end
end
class Aws::S3::Types::NotificationConfigurationDeprecated < Anonymous_Struct_255
  include Aws::Structure
end
class Anonymous_Struct_256 < Struct
  def key; end
  def key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::NotificationConfigurationFilter < Anonymous_Struct_256
  include Aws::Structure
end
class Anonymous_Struct_257 < Struct
  def etag; end
  def etag=(_); end
  def key; end
  def key=(_); end
  def last_modified; end
  def last_modified=(_); end
  def owner; end
  def owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def size; end
  def size=(_); end
  def storage_class; end
  def storage_class=(_); end
end
class Aws::S3::Types::Object < Anonymous_Struct_257
  include Aws::Structure
end
class Anonymous_Struct_258 < Struct
  def key; end
  def key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::ObjectIdentifier < Anonymous_Struct_258
  include Aws::Structure
end
class Anonymous_Struct_259 < Struct
  def etag; end
  def etag=(_); end
  def is_latest; end
  def is_latest=(_); end
  def key; end
  def key=(_); end
  def last_modified; end
  def last_modified=(_); end
  def owner; end
  def owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def size; end
  def size=(_); end
  def storage_class; end
  def storage_class=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::ObjectVersion < Anonymous_Struct_259
  include Aws::Structure
end
class Anonymous_Struct_260 < Struct
  def s3; end
  def s3=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::OutputLocation < Anonymous_Struct_260
  include Aws::Structure
end
class Anonymous_Struct_261 < Struct
  def csv; end
  def csv=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::OutputSerialization < Anonymous_Struct_261
  include Aws::Structure
end
class Anonymous_Struct_262 < Struct
  def display_name; end
  def display_name=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Owner < Anonymous_Struct_262
  include Aws::Structure
end
class Anonymous_Struct_263 < Struct
  def etag; end
  def etag=(_); end
  def last_modified; end
  def last_modified=(_); end
  def part_number; end
  def part_number=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def size; end
  def size=(_); end
end
class Aws::S3::Types::Part < Anonymous_Struct_263
  include Aws::Structure
end
class Anonymous_Struct_264 < Struct
  def accelerate_configuration; end
  def accelerate_configuration=(_); end
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketAccelerateConfigurationRequest < Anonymous_Struct_264
  include Aws::Structure
end
class Anonymous_Struct_265 < Struct
  def access_control_policy; end
  def access_control_policy=(_); end
  def acl; end
  def acl=(_); end
  def bucket; end
  def bucket=(_); end
  def content_md5; end
  def content_md5=(_); end
  def grant_full_control; end
  def grant_full_control=(_); end
  def grant_read; end
  def grant_read=(_); end
  def grant_read_acp; end
  def grant_read_acp=(_); end
  def grant_write; end
  def grant_write=(_); end
  def grant_write_acp; end
  def grant_write_acp=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketAclRequest < Anonymous_Struct_265
  include Aws::Structure
end
class Anonymous_Struct_266 < Struct
  def analytics_configuration; end
  def analytics_configuration=(_); end
  def bucket; end
  def bucket=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketAnalyticsConfigurationRequest < Anonymous_Struct_266
  include Aws::Structure
end
class Anonymous_Struct_267 < Struct
  def bucket; end
  def bucket=(_); end
  def content_md5; end
  def content_md5=(_); end
  def cors_configuration; end
  def cors_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketCorsRequest < Anonymous_Struct_267
  include Aws::Structure
end
class Anonymous_Struct_268 < Struct
  def bucket; end
  def bucket=(_); end
  def content_md5; end
  def content_md5=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption_configuration; end
  def server_side_encryption_configuration=(_); end
end
class Aws::S3::Types::PutBucketEncryptionRequest < Anonymous_Struct_268
  include Aws::Structure
end
class Anonymous_Struct_269 < Struct
  def bucket; end
  def bucket=(_); end
  def id; end
  def id=(_); end
  def inventory_configuration; end
  def inventory_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketInventoryConfigurationRequest < Anonymous_Struct_269
  include Aws::Structure
end
class Anonymous_Struct_270 < Struct
  def bucket; end
  def bucket=(_); end
  def lifecycle_configuration; end
  def lifecycle_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketLifecycleConfigurationRequest < Anonymous_Struct_270
  include Aws::Structure
end
class Anonymous_Struct_271 < Struct
  def bucket; end
  def bucket=(_); end
  def content_md5; end
  def content_md5=(_); end
  def lifecycle_configuration; end
  def lifecycle_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketLifecycleRequest < Anonymous_Struct_271
  include Aws::Structure
end
class Anonymous_Struct_272 < Struct
  def bucket; end
  def bucket=(_); end
  def bucket_logging_status; end
  def bucket_logging_status=(_); end
  def content_md5; end
  def content_md5=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketLoggingRequest < Anonymous_Struct_272
  include Aws::Structure
end
class Anonymous_Struct_273 < Struct
  def bucket; end
  def bucket=(_); end
  def id; end
  def id=(_); end
  def metrics_configuration; end
  def metrics_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketMetricsConfigurationRequest < Anonymous_Struct_273
  include Aws::Structure
end
class Anonymous_Struct_274 < Struct
  def bucket; end
  def bucket=(_); end
  def notification_configuration; end
  def notification_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketNotificationConfigurationRequest < Anonymous_Struct_274
  include Aws::Structure
end
class Anonymous_Struct_275 < Struct
  def bucket; end
  def bucket=(_); end
  def content_md5; end
  def content_md5=(_); end
  def notification_configuration; end
  def notification_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketNotificationRequest < Anonymous_Struct_275
  include Aws::Structure
end
class Anonymous_Struct_276 < Struct
  def bucket; end
  def bucket=(_); end
  def confirm_remove_self_bucket_access; end
  def confirm_remove_self_bucket_access=(_); end
  def content_md5; end
  def content_md5=(_); end
  def policy; end
  def policy=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketPolicyRequest < Anonymous_Struct_276
  include Aws::Structure
end
class Anonymous_Struct_277 < Struct
  def bucket; end
  def bucket=(_); end
  def content_md5; end
  def content_md5=(_); end
  def replication_configuration; end
  def replication_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketReplicationRequest < Anonymous_Struct_277
  include Aws::Structure
end
class Anonymous_Struct_278 < Struct
  def bucket; end
  def bucket=(_); end
  def content_md5; end
  def content_md5=(_); end
  def request_payment_configuration; end
  def request_payment_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketRequestPaymentRequest < Anonymous_Struct_278
  include Aws::Structure
end
class Anonymous_Struct_279 < Struct
  def bucket; end
  def bucket=(_); end
  def content_md5; end
  def content_md5=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def tagging; end
  def tagging=(_); end
end
class Aws::S3::Types::PutBucketTaggingRequest < Anonymous_Struct_279
  include Aws::Structure
end
class Anonymous_Struct_280 < Struct
  def bucket; end
  def bucket=(_); end
  def content_md5; end
  def content_md5=(_); end
  def mfa; end
  def mfa=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def versioning_configuration; end
  def versioning_configuration=(_); end
end
class Aws::S3::Types::PutBucketVersioningRequest < Anonymous_Struct_280
  include Aws::Structure
end
class Anonymous_Struct_281 < Struct
  def bucket; end
  def bucket=(_); end
  def content_md5; end
  def content_md5=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def website_configuration; end
  def website_configuration=(_); end
end
class Aws::S3::Types::PutBucketWebsiteRequest < Anonymous_Struct_281
  include Aws::Structure
end
class Anonymous_Struct_282 < Struct
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutObjectAclOutput < Anonymous_Struct_282
  include Aws::Structure
end
class Anonymous_Struct_283 < Struct
  def access_control_policy; end
  def access_control_policy=(_); end
  def acl; end
  def acl=(_); end
  def bucket; end
  def bucket=(_); end
  def content_md5; end
  def content_md5=(_); end
  def grant_full_control; end
  def grant_full_control=(_); end
  def grant_read; end
  def grant_read=(_); end
  def grant_read_acp; end
  def grant_read_acp=(_); end
  def grant_write; end
  def grant_write=(_); end
  def grant_write_acp; end
  def grant_write_acp=(_); end
  def key; end
  def key=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::PutObjectAclRequest < Anonymous_Struct_283
  include Aws::Structure
end
class Anonymous_Struct_284 < Struct
  def etag; end
  def etag=(_); end
  def expiration; end
  def expiration=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::PutObjectOutput < Anonymous_Struct_284
  include Aws::Structure
end
class Anonymous_Struct_285 < Struct
  def acl; end
  def acl=(_); end
  def body; end
  def body=(_); end
  def bucket; end
  def bucket=(_); end
  def cache_control; end
  def cache_control=(_); end
  def content_disposition; end
  def content_disposition=(_); end
  def content_encoding; end
  def content_encoding=(_); end
  def content_language; end
  def content_language=(_); end
  def content_length; end
  def content_length=(_); end
  def content_md5; end
  def content_md5=(_); end
  def content_type; end
  def content_type=(_); end
  def expires; end
  def expires=(_); end
  def grant_full_control; end
  def grant_full_control=(_); end
  def grant_read; end
  def grant_read=(_); end
  def grant_read_acp; end
  def grant_read_acp=(_); end
  def grant_write_acp; end
  def grant_write_acp=(_); end
  def key; end
  def key=(_); end
  def metadata; end
  def metadata=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key; end
  def sse_customer_key=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def storage_class; end
  def storage_class=(_); end
  def tagging; end
  def tagging=(_); end
  def website_redirect_location; end
  def website_redirect_location=(_); end
end
class Aws::S3::Types::PutObjectRequest < Anonymous_Struct_285
  include Aws::Structure
end
class Anonymous_Struct_286 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::PutObjectTaggingOutput < Anonymous_Struct_286
  include Aws::Structure
end
class Anonymous_Struct_287 < Struct
  def bucket; end
  def bucket=(_); end
  def content_md5; end
  def content_md5=(_); end
  def key; end
  def key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def tagging; end
  def tagging=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::PutObjectTaggingRequest < Anonymous_Struct_287
  include Aws::Structure
end
class Anonymous_Struct_288 < Struct
  def events; end
  def events=(_); end
  def filter; end
  def filter=(_); end
  def id; end
  def id=(_); end
  def queue_arn; end
  def queue_arn=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::QueueConfiguration < Anonymous_Struct_288
  include Aws::Structure
end
class Anonymous_Struct_289 < Struct
  def event; end
  def event=(_); end
  def events; end
  def events=(_); end
  def id; end
  def id=(_); end
  def queue; end
  def queue=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::QueueConfigurationDeprecated < Anonymous_Struct_289
  include Aws::Structure
end
class Anonymous_Struct_290 < Struct
  def host_name; end
  def host_name=(_); end
  def http_redirect_code; end
  def http_redirect_code=(_); end
  def protocol; end
  def protocol=(_); end
  def replace_key_prefix_with; end
  def replace_key_prefix_with=(_); end
  def replace_key_with; end
  def replace_key_with=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Redirect < Anonymous_Struct_290
  include Aws::Structure
end
class Anonymous_Struct_291 < Struct
  def host_name; end
  def host_name=(_); end
  def protocol; end
  def protocol=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::RedirectAllRequestsTo < Anonymous_Struct_291
  include Aws::Structure
end
class Anonymous_Struct_292 < Struct
  def role; end
  def role=(_); end
  def rules; end
  def rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ReplicationConfiguration < Anonymous_Struct_292
  include Aws::Structure
end
class Anonymous_Struct_293 < Struct
  def destination; end
  def destination=(_); end
  def id; end
  def id=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def source_selection_criteria; end
  def source_selection_criteria=(_); end
  def status; end
  def status=(_); end
end
class Aws::S3::Types::ReplicationRule < Anonymous_Struct_293
  include Aws::Structure
end
class Anonymous_Struct_294 < Struct
  def payer; end
  def payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::RequestPaymentConfiguration < Anonymous_Struct_294
  include Aws::Structure
end
class Anonymous_Struct_295 < Struct
  def request_charged; end
  def request_charged=(_); end
  def restore_output_path; end
  def restore_output_path=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::RestoreObjectOutput < Anonymous_Struct_295
  include Aws::Structure
end
class Anonymous_Struct_296 < Struct
  def bucket; end
  def bucket=(_); end
  def key; end
  def key=(_); end
  def request_payer; end
  def request_payer=(_); end
  def restore_request; end
  def restore_request=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::RestoreObjectRequest < Anonymous_Struct_296
  include Aws::Structure
end
class Anonymous_Struct_297 < Struct
  def days; end
  def days=(_); end
  def description; end
  def description=(_); end
  def glacier_job_parameters; end
  def glacier_job_parameters=(_); end
  def output_location; end
  def output_location=(_); end
  def select_parameters; end
  def select_parameters=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def tier; end
  def tier=(_); end
  def type; end
  def type=(_); end
end
class Aws::S3::Types::RestoreRequest < Anonymous_Struct_297
  include Aws::Structure
end
class Anonymous_Struct_298 < Struct
  def condition; end
  def condition=(_); end
  def redirect; end
  def redirect=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::RoutingRule < Anonymous_Struct_298
  include Aws::Structure
end
class Anonymous_Struct_299 < Struct
  def abort_incomplete_multipart_upload; end
  def abort_incomplete_multipart_upload=(_); end
  def expiration; end
  def expiration=(_); end
  def id; end
  def id=(_); end
  def noncurrent_version_expiration; end
  def noncurrent_version_expiration=(_); end
  def noncurrent_version_transition; end
  def noncurrent_version_transition=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
  def transition; end
  def transition=(_); end
end
class Aws::S3::Types::Rule < Anonymous_Struct_299
  include Aws::Structure
end
class Anonymous_Struct_300 < Struct
  def filter_rules; end
  def filter_rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::S3KeyFilter < Anonymous_Struct_300
  include Aws::Structure
end
class Anonymous_Struct_301 < Struct
  def access_control_list; end
  def access_control_list=(_); end
  def bucket_name; end
  def bucket_name=(_); end
  def canned_acl; end
  def canned_acl=(_); end
  def encryption; end
  def encryption=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def storage_class; end
  def storage_class=(_); end
  def tagging; end
  def tagging=(_); end
  def user_metadata; end
  def user_metadata=(_); end
end
class Aws::S3::Types::S3Location < Anonymous_Struct_301
  include Aws::Structure
end
class Anonymous_Struct_302 < Struct
  def key_id; end
  def key_id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::SSEKMS < Anonymous_Struct_302
  include Aws::Structure
end
class Aws::S3::Types::SSES3 < Aws::EmptyStructure
end
class Anonymous_Struct_303 < Struct
  def expression; end
  def expression=(_); end
  def expression_type; end
  def expression_type=(_); end
  def input_serialization; end
  def input_serialization=(_); end
  def output_serialization; end
  def output_serialization=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::SelectParameters < Anonymous_Struct_303
  include Aws::Structure
end
class Anonymous_Struct_304 < Struct
  def kms_master_key_id; end
  def kms_master_key_id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def sse_algorithm; end
  def sse_algorithm=(_); end
end
class Aws::S3::Types::ServerSideEncryptionByDefault < Anonymous_Struct_304
  include Aws::Structure
end
class Anonymous_Struct_305 < Struct
  def rules; end
  def rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ServerSideEncryptionConfiguration < Anonymous_Struct_305
  include Aws::Structure
end
class Anonymous_Struct_306 < Struct
  def apply_server_side_encryption_by_default; end
  def apply_server_side_encryption_by_default=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ServerSideEncryptionRule < Anonymous_Struct_306
  include Aws::Structure
end
class Anonymous_Struct_307 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def sse_kms_encrypted_objects; end
  def sse_kms_encrypted_objects=(_); end
end
class Aws::S3::Types::SourceSelectionCriteria < Anonymous_Struct_307
  include Aws::Structure
end
class Anonymous_Struct_308 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
end
class Aws::S3::Types::SseKmsEncryptedObjects < Anonymous_Struct_308
  include Aws::Structure
end
class Anonymous_Struct_309 < Struct
  def data_export; end
  def data_export=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::StorageClassAnalysis < Anonymous_Struct_309
  include Aws::Structure
end
class Anonymous_Struct_310 < Struct
  def destination; end
  def destination=(_); end
  def output_schema_version; end
  def output_schema_version=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::StorageClassAnalysisDataExport < Anonymous_Struct_310
  include Aws::Structure
end
class Anonymous_Struct_311 < Struct
  def key; end
  def key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def value; end
  def value=(_); end
end
class Aws::S3::Types::Tag < Anonymous_Struct_311
  include Aws::Structure
end
class Anonymous_Struct_312 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def tag_set; end
  def tag_set=(_); end
end
class Aws::S3::Types::Tagging < Anonymous_Struct_312
  include Aws::Structure
end
class Anonymous_Struct_313 < Struct
  def grantee; end
  def grantee=(_); end
  def permission; end
  def permission=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::TargetGrant < Anonymous_Struct_313
  include Aws::Structure
end
class Anonymous_Struct_314 < Struct
  def events; end
  def events=(_); end
  def filter; end
  def filter=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def topic_arn; end
  def topic_arn=(_); end
end
class Aws::S3::Types::TopicConfiguration < Anonymous_Struct_314
  include Aws::Structure
end
class Anonymous_Struct_315 < Struct
  def event; end
  def event=(_); end
  def events; end
  def events=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def topic; end
  def topic=(_); end
end
class Aws::S3::Types::TopicConfigurationDeprecated < Anonymous_Struct_315
  include Aws::Structure
end
class Anonymous_Struct_316 < Struct
  def date; end
  def date=(_); end
  def days; end
  def days=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def storage_class; end
  def storage_class=(_); end
end
class Aws::S3::Types::Transition < Anonymous_Struct_316
  include Aws::Structure
end
class Anonymous_Struct_317 < Struct
  def copy_part_result; end
  def copy_part_result=(_); end
  def copy_source_version_id; end
  def copy_source_version_id=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
end
class Aws::S3::Types::UploadPartCopyOutput < Anonymous_Struct_317
  include Aws::Structure
end
class Anonymous_Struct_318 < Struct
  def bucket; end
  def bucket=(_); end
  def copy_source; end
  def copy_source=(_); end
  def copy_source_if_match; end
  def copy_source_if_match=(_); end
  def copy_source_if_modified_since; end
  def copy_source_if_modified_since=(_); end
  def copy_source_if_none_match; end
  def copy_source_if_none_match=(_); end
  def copy_source_if_unmodified_since; end
  def copy_source_if_unmodified_since=(_); end
  def copy_source_range; end
  def copy_source_range=(_); end
  def copy_source_sse_customer_algorithm; end
  def copy_source_sse_customer_algorithm=(_); end
  def copy_source_sse_customer_key; end
  def copy_source_sse_customer_key=(_); end
  def copy_source_sse_customer_key_md5; end
  def copy_source_sse_customer_key_md5=(_); end
  def key; end
  def key=(_); end
  def part_number; end
  def part_number=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key; end
  def sse_customer_key=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def upload_id; end
  def upload_id=(_); end
end
class Aws::S3::Types::UploadPartCopyRequest < Anonymous_Struct_318
  include Aws::Structure
end
class Anonymous_Struct_319 < Struct
  def etag; end
  def etag=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
end
class Aws::S3::Types::UploadPartOutput < Anonymous_Struct_319
  include Aws::Structure
end
class Anonymous_Struct_320 < Struct
  def body; end
  def body=(_); end
  def bucket; end
  def bucket=(_); end
  def content_length; end
  def content_length=(_); end
  def content_md5; end
  def content_md5=(_); end
  def key; end
  def key=(_); end
  def part_number; end
  def part_number=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key; end
  def sse_customer_key=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def upload_id; end
  def upload_id=(_); end
end
class Aws::S3::Types::UploadPartRequest < Anonymous_Struct_320
  include Aws::Structure
end
class Anonymous_Struct_321 < Struct
  def mfa_delete; end
  def mfa_delete=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
end
class Aws::S3::Types::VersioningConfiguration < Anonymous_Struct_321
  include Aws::Structure
end
class Anonymous_Struct_322 < Struct
  def error_document; end
  def error_document=(_); end
  def index_document; end
  def index_document=(_); end
  def redirect_all_requests_to; end
  def redirect_all_requests_to=(_); end
  def routing_rules; end
  def routing_rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::WebsiteConfiguration < Anonymous_Struct_322
  include Aws::Structure
end
module Aws::S3::ClientApi
  include Seahorse::Model
end
module Aws
end
module Aws::S3::Plugins
end
class Aws::S3::Plugins::Accelerate < Seahorse::Client::Plugin
  def add_handlers(handlers, config); end
end
class Aws::S3::Plugins::Accelerate::OptionHandler < Seahorse::Client::Handler
  def call(context); end
end
class Aws::S3::Plugins::Accelerate::AccelerateHandler < Seahorse::Client::Handler
  def call(context); end
  def use_accelerate_endpoint(context); end
  def use_combined_accelerate_dualstack_endpoint(context); end
  def validate_bucket_name!(bucket_name); end
end
class Aws::S3::Plugins::Dualstack < Seahorse::Client::Plugin
  def add_handlers(handlers, config); end
end
class Aws::S3::Plugins::Dualstack::OptionHandler < Seahorse::Client::Handler
  def call(context); end
end
class Aws::S3::Plugins::Dualstack::DualstackHandler < Seahorse::Client::Handler
  def apply_dualstack_endpoint(context); end
  def call(context); end
  def use_bucket_dns?(bucket_name, context); end
  def use_dualstack_endpoint?(context); end
end
class Aws::S3::Plugins::BucketDns < Seahorse::Client::Plugin
  def add_handlers(handlers, config); end
  def self.dns_compatible?(bucket_name, ssl); end
  def self.valid_subdomain?(bucket_name); end
end
class Aws::S3::Plugins::BucketDns::Handler < Seahorse::Client::Handler
  def call(context); end
  def https?(uri); end
  def move_bucket_to_subdomain(bucket_name, endpoint); end
  def move_dns_compat_bucket_to_subdomain(context); end
end
class Aws::S3::Plugins::Expect100Continue < Seahorse::Client::Plugin
  def add_handlers(handlers, config); end
end
class Aws::S3::Plugins::Expect100Continue::Handler < Seahorse::Client::Handler
  def call(context); end
end
class Aws::S3::Plugins::Http200Errors < Seahorse::Client::Plugin
end
class Aws::S3::Plugins::Http200Errors::Handler < Seahorse::Client::Handler
  def call(context); end
  def check_for_error(context); end
end
class Aws::S3::Plugins::S3HostId < Seahorse::Client::Plugin
end
class Aws::S3::Plugins::S3HostId::Handler < Seahorse::Client::Handler
  def call(context); end
end
class Aws::S3::Plugins::GetBucketLocationFix < Seahorse::Client::Plugin
end
class Aws::S3::Plugins::GetBucketLocationFix::Handler < Seahorse::Client::Handler
  def call(context); end
end
class Aws::S3::Plugins::LocationConstraint < Seahorse::Client::Plugin
end
class Aws::S3::Plugins::LocationConstraint::Handler < Seahorse::Client::Handler
  def call(context); end
  def populate_location_constraint(params, region); end
end
class Aws::S3::Plugins::Md5s < Seahorse::Client::Plugin
  def add_handlers(handlers, config); end
end
class Aws::S3::Plugins::Md5s::Handler < Seahorse::Client::Handler
  def call(context); end
  def md5(value); end
  def update_in_chunks(digest, io); end
end
class Aws::S3::Plugins::Redirects < Seahorse::Client::Plugin
  def add_handlers(handlers, config); end
end
class Aws::S3::Plugins::Redirects::Handler < Seahorse::Client::Handler
  def call(context); end
end
class Aws::S3::Plugins::SseCpk < Seahorse::Client::Plugin
end
class Aws::S3::Plugins::SseCpk::Handler < Seahorse::Client::Handler
  def base64(str); end
  def call(context); end
  def compute_key_md5(context); end
  def md5(str); end
  def require_https(context); end
end
class Aws::S3::Plugins::UrlEncodedKeys < Seahorse::Client::Plugin
end
class Aws::S3::Plugins::UrlEncodedKeys::Handler < Seahorse::Client::Handler
  def call(context); end
  def decode(member, struct); end
  def decode_list_multipart_uploads_keys(data); end
  def decode_list_object_versions_keys(data); end
  def decode_list_objects_keys(data); end
  def manage_keys(context); end
end
class Aws::S3::Plugins::S3Signer < Seahorse::Client::Plugin
  def add_handlers(handlers, cfg); end
  def add_legacy_handler(handlers); end
  def add_v4_handlers(handlers); end
  def self.build_v4_signer(options = nil); end
  def self.new_hostname(context, region); end
end
class Aws::S3::Plugins::S3Signer::LegacyHandler < Seahorse::Client::Handler
  def call(context); end
end
class Aws::S3::Plugins::S3Signer::V4Handler < Seahorse::Client::Handler
  def call(context); end
  def sigv4_signer(context); end
end
class Aws::S3::Plugins::S3Signer::CachedBucketRegionHandler < Seahorse::Client::Handler
  def call(context); end
  def check_for_cached_region(context, bucket); end
end
class Aws::S3::Plugins::S3Signer::BucketRegionErrorHandler < Seahorse::Client::Handler
  def call(context); end
  def get_region_and_retry(context); end
  def handle_region_errors(response); end
  def log_warning(context, actual_region); end
  def region_from_body(body); end
  def resign_with_new_region(context, actual_region); end
  def update_bucket_cache(context, actual_region); end
  def wrong_sigv4_region?(resp); end
end
class Aws::S3::Plugins::BucketNameRestrictions < Seahorse::Client::Plugin
end
class Aws::S3::Plugins::BucketNameRestrictions::Handler < Seahorse::Client::Handler
  def call(context); end
end
class Aws::S3::Client < Seahorse::Client::Base
  def abort_multipart_upload(params = nil, options = nil); end
  def build_request(operation_name, params = nil); end
  def complete_multipart_upload(params = nil, options = nil); end
  def copy_object(params = nil, options = nil); end
  def create_bucket(params = nil, options = nil); end
  def create_multipart_upload(params = nil, options = nil); end
  def delete_bucket(params = nil, options = nil); end
  def delete_bucket_analytics_configuration(params = nil, options = nil); end
  def delete_bucket_cors(params = nil, options = nil); end
  def delete_bucket_encryption(params = nil, options = nil); end
  def delete_bucket_inventory_configuration(params = nil, options = nil); end
  def delete_bucket_lifecycle(params = nil, options = nil); end
  def delete_bucket_metrics_configuration(params = nil, options = nil); end
  def delete_bucket_policy(params = nil, options = nil); end
  def delete_bucket_replication(params = nil, options = nil); end
  def delete_bucket_tagging(params = nil, options = nil); end
  def delete_bucket_website(params = nil, options = nil); end
  def delete_object(params = nil, options = nil); end
  def delete_object_tagging(params = nil, options = nil); end
  def delete_objects(params = nil, options = nil); end
  def get_bucket_accelerate_configuration(params = nil, options = nil); end
  def get_bucket_acl(params = nil, options = nil); end
  def get_bucket_analytics_configuration(params = nil, options = nil); end
  def get_bucket_cors(params = nil, options = nil); end
  def get_bucket_encryption(params = nil, options = nil); end
  def get_bucket_inventory_configuration(params = nil, options = nil); end
  def get_bucket_lifecycle(params = nil, options = nil); end
  def get_bucket_lifecycle_configuration(params = nil, options = nil); end
  def get_bucket_location(params = nil, options = nil); end
  def get_bucket_logging(params = nil, options = nil); end
  def get_bucket_metrics_configuration(params = nil, options = nil); end
  def get_bucket_notification(params = nil, options = nil); end
  def get_bucket_notification_configuration(params = nil, options = nil); end
  def get_bucket_policy(params = nil, options = nil, &block); end
  def get_bucket_replication(params = nil, options = nil); end
  def get_bucket_request_payment(params = nil, options = nil); end
  def get_bucket_tagging(params = nil, options = nil); end
  def get_bucket_versioning(params = nil, options = nil); end
  def get_bucket_website(params = nil, options = nil); end
  def get_object(params = nil, options = nil, &block); end
  def get_object_acl(params = nil, options = nil); end
  def get_object_tagging(params = nil, options = nil); end
  def get_object_torrent(params = nil, options = nil, &block); end
  def head_bucket(params = nil, options = nil); end
  def head_object(params = nil, options = nil); end
  def initialize(*args); end
  def list_bucket_analytics_configurations(params = nil, options = nil); end
  def list_bucket_inventory_configurations(params = nil, options = nil); end
  def list_bucket_metrics_configurations(params = nil, options = nil); end
  def list_buckets(params = nil, options = nil); end
  def list_multipart_uploads(params = nil, options = nil); end
  def list_object_versions(params = nil, options = nil); end
  def list_objects(params = nil, options = nil); end
  def list_objects_v2(params = nil, options = nil); end
  def list_parts(params = nil, options = nil); end
  def put_bucket_accelerate_configuration(params = nil, options = nil); end
  def put_bucket_acl(params = nil, options = nil); end
  def put_bucket_analytics_configuration(params = nil, options = nil); end
  def put_bucket_cors(params = nil, options = nil); end
  def put_bucket_encryption(params = nil, options = nil); end
  def put_bucket_inventory_configuration(params = nil, options = nil); end
  def put_bucket_lifecycle(params = nil, options = nil); end
  def put_bucket_lifecycle_configuration(params = nil, options = nil); end
  def put_bucket_logging(params = nil, options = nil); end
  def put_bucket_metrics_configuration(params = nil, options = nil); end
  def put_bucket_notification(params = nil, options = nil); end
  def put_bucket_notification_configuration(params = nil, options = nil); end
  def put_bucket_policy(params = nil, options = nil); end
  def put_bucket_replication(params = nil, options = nil); end
  def put_bucket_request_payment(params = nil, options = nil); end
  def put_bucket_tagging(params = nil, options = nil); end
  def put_bucket_versioning(params = nil, options = nil); end
  def put_bucket_website(params = nil, options = nil); end
  def put_object(params = nil, options = nil); end
  def put_object_acl(params = nil, options = nil); end
  def put_object_tagging(params = nil, options = nil); end
  def restore_object(params = nil, options = nil); end
  def self.errors_module; end
  def self.identifier; end
  def upload_part(params = nil, options = nil); end
  def upload_part_copy(params = nil, options = nil); end
  def wait_until(waiter_name, params = nil, options = nil); end
  def waiter(waiter_name, options = nil); end
  def waiter_names; end
  def waiters; end
  include Aws::ClientStubs
end
module Aws::S3::Errors
  extend Aws::Errors::DynamicErrors
end
class Aws::S3::Errors::ServiceError < Aws::Errors::ServiceError
end
module Aws::S3::Waiters
end
class Aws::S3::Waiters::BucketExists
  def initialize(options); end
  def wait(params = nil); end
  def waiter; end
end
class Aws::S3::Waiters::BucketNotExists
  def initialize(options); end
  def wait(params = nil); end
  def waiter; end
end
class Aws::S3::Waiters::ObjectExists
  def initialize(options); end
  def wait(params = nil); end
  def waiter; end
end
class Aws::S3::Waiters::ObjectNotExists
  def initialize(options); end
  def wait(params = nil); end
  def waiter; end
end
class Aws::S3::Resource
  def bucket(name); end
  def buckets(options = nil); end
  def client; end
  def create_bucket(options = nil); end
  def initialize(options = nil); end
end
class Aws::S3::Bucket
  def acl; end
  def bucket_as_hostname?(https); end
  def clear!; end
  def client; end
  def cors; end
  def create(options = nil); end
  def creation_date; end
  def data; end
  def data_loaded?; end
  def delete!(options = nil); end
  def delete(options = nil); end
  def delete_objects(options = nil); end
  def deprecated_identifiers; end
  def exists?(options = nil); end
  def extract_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def lifecycle; end
  def lifecycle_configuration; end
  def load; end
  def logging; end
  def multipart_uploads(options = nil); end
  def name; end
  def notification; end
  def object(key); end
  def object_versions(options = nil); end
  def objects(options = nil); end
  def policy; end
  def presigned_post(options = nil); end
  def put_object(options = nil); end
  def reload; end
  def request_payment; end
  def s3_bucket_url; end
  def separate_params_and_options(options); end
  def tagging; end
  def url(options = nil); end
  def versioning; end
  def wait_until(options = nil, &block); end
  def wait_until_exists(options = nil); end
  def wait_until_not_exists(options = nil); end
  def website; end
  def yield_waiter_and_warn(waiter, &block); end
  extend Aws::Deprecations
end
class Aws::S3::Bucket::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketAcl
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def grants; end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def owner; end
  def put(options = nil); end
  def reload; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketAcl::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketCors
  def bucket; end
  def bucket_name; end
  def client; end
  def cors_rules; end
  def data; end
  def data_loaded?; end
  def delete(options = nil); end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def put(options = nil); end
  def reload; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketCors::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketLifecycle
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def delete(options = nil); end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def put(options = nil); end
  def reload; end
  def rules; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketLifecycle::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketLifecycleConfiguration
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def delete(options = nil); end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def put(options = nil); end
  def reload; end
  def rules; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketLifecycleConfiguration::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketLogging
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def logging_enabled; end
  def put(options = nil); end
  def reload; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketLogging::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketNotification
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def lambda_function_configurations; end
  def load; end
  def put(options = nil); end
  def queue_configurations; end
  def reload; end
  def topic_configurations; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketNotification::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketPolicy
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def delete(options = nil); end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def policy; end
  def put(options = nil); end
  def reload; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketPolicy::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketRequestPayment
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def payer; end
  def put(options = nil); end
  def reload; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketRequestPayment::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketTagging
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def delete(options = nil); end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def put(options = nil); end
  def reload; end
  def tag_set; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketTagging::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketVersioning
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def deprecated_identifiers; end
  def enable(options = nil); end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def mfa_delete; end
  def put(options = nil); end
  def reload; end
  def status; end
  def suspend(options = nil); end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketVersioning::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketWebsite
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def delete(options = nil); end
  def deprecated_identifiers; end
  def error_document; end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def index_document; end
  def initialize(*args); end
  def load; end
  def put(options = nil); end
  def redirect_all_requests_to; end
  def reload; end
  def routing_rules; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketWebsite::Collection < Aws::Resources::Collection
end
class Aws::S3::MultipartUpload
  def abort(options = nil); end
  def basic_complete(options = nil); end
  def bucket_name; end
  def client; end
  def complete(options = nil); end
  def compute_parts; end
  def data; end
  def data_loaded?; end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def extract_id(args, options); end
  def extract_object_key(args, options); end
  def id; end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def initiated; end
  def initiator; end
  def key; end
  def load; end
  def object; end
  def object_key; end
  def owner; end
  def part(part_number); end
  def parts(options = nil); end
  def reload; end
  def storage_class; end
  def upload_id; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::MultipartUpload::Collection < Aws::Resources::Collection
end
class Aws::S3::MultipartUploadPart
  def bucket_name; end
  def client; end
  def copy_from(options = nil); end
  def data; end
  def data_loaded?; end
  def deprecated_identifiers; end
  def etag; end
  def extract_bucket_name(args, options); end
  def extract_multipart_upload_id(args, options); end
  def extract_object_key(args, options); end
  def extract_part_number(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def last_modified; end
  def load; end
  def multipart_upload; end
  def multipart_upload_id; end
  def object_key; end
  def part_number; end
  def reload; end
  def size; end
  def upload(options = nil); end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::MultipartUploadPart::Collection < Aws::Resources::Collection
end
class Aws::S3::Object
  def accept_ranges; end
  def acl; end
  def bucket; end
  def bucket_name; end
  def cache_control; end
  def client; end
  def content_disposition; end
  def content_encoding; end
  def content_language; end
  def content_length; end
  def content_type; end
  def copy_from(source, options = nil); end
  def copy_to(target, options = nil); end
  def data; end
  def data_loaded?; end
  def delete(options = nil); end
  def delete_marker; end
  def deprecated_identifiers; end
  def download_file(destination, options = nil); end
  def etag; end
  def exists?(options = nil); end
  def expiration; end
  def expires; end
  def expires_string; end
  def extract_bucket_name(args, options); end
  def extract_key(args, options); end
  def get(options = nil, &block); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def initiate_multipart_upload(options = nil); end
  def key; end
  def last_modified; end
  def load; end
  def metadata; end
  def missing_meta; end
  def move_to(target, options = nil); end
  def multipart_upload(id); end
  def parts_count; end
  def presigned_post(options = nil); end
  def presigned_url(http_method, params = nil); end
  def public_url(options = nil); end
  def put(options = nil); end
  def reload; end
  def replication_status; end
  def request_charged; end
  def restore; end
  def restore_object(options = nil); end
  def separate_params_and_options(options); end
  def server_side_encryption; end
  def size; end
  def sse_customer_algorithm; end
  def sse_customer_key_md5; end
  def ssekms_key_id; end
  def storage_class; end
  def upload_file(source, options = nil); end
  def version(id); end
  def version_id; end
  def wait_until(options = nil, &block); end
  def wait_until_exists(options = nil); end
  def wait_until_not_exists(options = nil); end
  def website_redirect_location; end
  def yield_waiter_and_warn(waiter, &block); end
  extend Aws::Deprecations
end
class Aws::S3::Object::Collection < Aws::Resources::Collection
  def batch_delete!(options = nil); end
  def delete(*args, &block); end
  def deprecated_delete(options = nil); end
  extend Aws::Deprecations
end
class Aws::S3::ObjectAcl
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def extract_object_key(args, options); end
  def grants; end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def object; end
  def object_key; end
  def owner; end
  def put(options = nil); end
  def reload; end
  def request_charged; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::ObjectAcl::Collection < Aws::Resources::Collection
end
class Aws::S3::ObjectSummary
  def acl; end
  def bucket; end
  def bucket_name; end
  def client; end
  def content_length; end
  def copy_from(source, options = nil); end
  def copy_to(target, options = nil); end
  def data; end
  def data_loaded?; end
  def delete(options = nil); end
  def deprecated_identifiers; end
  def download_file(destination, options = nil); end
  def etag; end
  def exists?(options = nil); end
  def extract_bucket_name(args, options); end
  def extract_key(args, options); end
  def get(options = nil, &block); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def initiate_multipart_upload(options = nil); end
  def key; end
  def last_modified; end
  def load; end
  def move_to(target, options = nil); end
  def multipart_upload(id); end
  def object; end
  def owner; end
  def presigned_post(options = nil); end
  def presigned_url(http_method, params = nil); end
  def public_url(options = nil); end
  def put(options = nil); end
  def reload; end
  def restore_object(options = nil); end
  def separate_params_and_options(options); end
  def size; end
  def storage_class; end
  def upload_file(source, options = nil); end
  def version(id); end
  def wait_until(options = nil, &block); end
  def wait_until_exists(options = nil); end
  def wait_until_not_exists(options = nil); end
  def yield_waiter_and_warn(waiter, &block); end
  extend Aws::Deprecations
end
class Aws::S3::ObjectSummary::Collection < Aws::Resources::Collection
  def batch_delete!(options = nil); end
  def delete(*args, &block); end
  def deprecated_delete(options = nil); end
  extend Aws::Deprecations
end
class Aws::S3::ObjectVersion
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def delete(options = nil); end
  def deprecated_identifiers; end
  def etag; end
  def extract_bucket_name(args, options); end
  def extract_id(args, options); end
  def extract_object_key(args, options); end
  def get(options = nil, &block); end
  def head(options = nil); end
  def id; end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def is_latest; end
  def key; end
  def last_modified; end
  def load; end
  def object; end
  def object_key; end
  def owner; end
  def reload; end
  def size; end
  def storage_class; end
  def version_id; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::ObjectVersion::Collection < Aws::Resources::Collection
  def batch_delete!(options = nil); end
  def delete(*args, &block); end
  def deprecated_delete(options = nil); end
  extend Aws::Deprecations
end
class Aws::S3::BucketRegionCache
  def [](bucket_name); end
  def []=(bucket_name, region_name); end
  def bucket_added(&block); end
  def clear; end
  def initialize; end
  def to_h; end
  def to_hash; end
end
module Aws::S3::Encryption
end
class Aws::S3::Encryption::Client
  def cipher_provider(options); end
  def client; end
  def envelope_location; end
  def envelope_options(params); end
  def extract_client(options); end
  def extract_key_provider(options); end
  def extract_location(options); end
  def extract_suffix(options); end
  def get_object(params = nil, &block); end
  def initialize(options = nil); end
  def instruction_file_suffix; end
  def key_provider; end
  def kms_client(options); end
  def put_object(params = nil); end
  extend Aws::Deprecations
end
class Aws::S3::Encryption::DecryptHandler < Seahorse::Client::Handler
  def attach_http_event_listeners(context); end
  def authenticated_decrypter(context, cipher); end
  def body_contains_auth_tag?(context); end
  def call(context); end
  def decryption_cipher(context); end
  def envelope_from_instr_file(context); end
  def envelope_from_metadata(context); end
  def extract_envelope(hash); end
  def get_encryption_envelope(context); end
  def v1_envelope(envelope); end
  def v2_envelope(envelope); end
end
class Aws::S3::Encryption::DefaultCipherProvider
  def decode64(str); end
  def decryption_cipher(envelope); end
  def encode64(str); end
  def encrypt(data); end
  def encryption_cipher; end
  def envelope_iv(cipher); end
  def envelope_key(cipher); end
  def initialize(options = nil); end
  def materials_description; end
end
class Aws::S3::Encryption::EncryptHandler < Seahorse::Client::Handler
  def apply_encryption_cipher(context, cipher); end
  def apply_encryption_envelope(context, envelope, cipher); end
  def call(context); end
end
module Aws::S3::Encryption::Errors
end
class Aws::S3::Encryption::Errors::DecryptionError < RuntimeError
end
class Aws::S3::Encryption::Errors::EncryptionError < RuntimeError
end
class Aws::S3::Encryption::IOEncrypter
  def close; end
  def encrypt_to_stringio(cipher, plain_text); end
  def encrypt_to_tempfile(cipher, io); end
  def initialize(cipher, io); end
  def read(bytes = nil, output_buffer = nil); end
  def rewind; end
  def size; end
end
class Aws::S3::Encryption::IODecrypter
  def finalize; end
  def initialize(cipher, io); end
  def io; end
  def write(chunk); end
end
class Aws::S3::Encryption::IOAuthDecrypter
  def finalize; end
  def initialize(options = nil); end
  def io; end
  def truncate_chunk(chunk); end
  def write(chunk); end
end
module Aws::S3::Encryption::KeyProvider
  def encryption_materials; end
  def key_for(materials_description); end
end
class Aws::S3::Encryption::KmsCipherProvider
  def decode64(str); end
  def decryption_cipher(envelope); end
  def encode64(str); end
  def encryption_cipher; end
  def initialize(options = nil); end
end
class Aws::S3::Encryption::Materials
  def description; end
  def initialize(options = nil); end
  def key; end
  def validate_desc(description); end
  def validate_key(key); end
end
module Aws::S3::Encryption::Utils
  def self.aes_cipher(mode, block_mode, key, iv); end
  def self.aes_decryption_cipher(block_mode, key = nil, iv = nil); end
  def self.aes_encryption_cipher(block_mode, key = nil, iv = nil); end
  def self.cipher_size(key); end
  def self.decrypt(key, data); end
  def self.encrypt(key, data); end
end
class Aws::S3::Encryption::DefaultKeyProvider
  def encryption_materials; end
  def initialize(options = nil); end
  def key_for(materials_description); end
  include Aws::S3::Encryption::KeyProvider
end
class Aws::S3::FilePart
  def close; end
  def first_byte; end
  def initialize(options = nil); end
  def last_byte; end
  def open_file; end
  def read(bytes = nil, output_buffer = nil); end
  def read_from_file(bytes, output_buffer); end
  def remaining_bytes; end
  def rewind; end
  def size; end
  def source; end
end
class Aws::S3::FileUploader
  def client; end
  def initialize(options = nil); end
  def multipart_threshold; end
  def open_file(source); end
  def put_object(source, options); end
  def upload(source, options = nil); end
end
class Aws::S3::FileDownloader
  def batches(chunks, mode); end
  def client; end
  def compute_chunk(file_size); end
  def compute_mode(file_size, count); end
  def construct_chunks(file_size); end
  def download(destination, options = nil); end
  def initialize(options = nil); end
  def multipart_download; end
  def multithreaded_get_by_parts(parts); end
  def multithreaded_get_by_ranges(chunks); end
  def single_request; end
  def thread_batches(chunks, param); end
  def write(resp); end
end
class Aws::S3::LegacySigner
  def authorization(request); end
  def canonicalized_headers(request); end
  def canonicalized_resource(endpoint); end
  def credentials; end
  def digest(secret, string_to_sign); end
  def hmac(key, value); end
  def initialize(credentials, params, force_path_style); end
  def params; end
  def self.sign(context); end
  def sign(request); end
  def signature(request); end
  def signed_querystring_params(endpoint); end
  def signing_string_date(request); end
  def string_to_sign(request); end
  def uri_escape(s); end
end
class Aws::S3::MultipartFileUploader
  def abort_upload(upload_id, options, errors); end
  def client; end
  def complete_upload(upload_id, parts, options); end
  def compute_default_part_size(source_size); end
  def compute_parts(upload_id, source, options); end
  def create_opts(options); end
  def initialize(options = nil); end
  def initiate_upload(options); end
  def part_size(total_size, part_size, offset); end
  def upload(source, options = nil); end
  def upload_in_threads(pending, completed); end
  def upload_part_opts(options); end
  def upload_parts(upload_id, source, options); end
end
class Aws::S3::MultipartFileUploader::PartList
  def clear!; end
  def initialize(parts = nil); end
  def push(part); end
  def shift; end
  def to_a; end
end
class Aws::S3::MultipartUploadError < StandardError
  def errors; end
  def initialize(message, errors); end
end
class Aws::S3::ObjectCopier
  def apply_source_client(source, options); end
  def copy_from(source, options = nil); end
  def copy_object(source, target, options); end
  def copy_source(source); end
  def copy_target(target); end
  def copy_to(target, options = nil); end
  def escape(str); end
  def initialize(object, options = nil); end
  def merge_options(source_or_target, options); end
end
class Aws::S3::ObjectMultipartCopier
  def abort_upload(options); end
  def byte_range(offset, default_part_size, size); end
  def client; end
  def complete_upload(parts, options); end
  def compute_parts(size, default_part_size, options); end
  def copy(options = nil); end
  def copy_part(part); end
  def copy_part_thread(queue); end
  def copy_parts(size, default_part_size, options); end
  def default_part_size(source_size); end
  def initialize(options = nil); end
  def initiate_upload(options); end
  def options_for(operation_name, options); end
  def self.options_for(shape_name); end
  def source_size(options); end
end
class Aws::S3::ObjectMultipartCopier::PartQueue
  def clear!; end
  def initialize(parts = nil); end
  def shift; end
end
class Aws::S3::PresignedPost
  def acl(value); end
  def acl_starts_with(value); end
  def allow_any(*field_names); end
  def base64(str); end
  def bucket_url; end
  def cache_control(value); end
  def cache_control_starts_with(value); end
  def check_required_values!; end
  def content_disposition(value); end
  def content_disposition_starts_with(value); end
  def content_encoding(value); end
  def content_encoding_starts_with(value); end
  def content_length_range(byte_range); end
  def content_type(value); end
  def content_type_starts_with(value); end
  def credential_scope(datetime); end
  def expires(time); end
  def expires_starts_with(prefix); end
  def fields; end
  def hexhmac(key, value); end
  def hmac(key, value); end
  def initialize(credentials, bucket_region, bucket_name, options = nil); end
  def key(key); end
  def key_starts_with(prefix); end
  def metadata(hash); end
  def metadata_starts_with(hash); end
  def policy(datetime); end
  def self.define_field(field, *args); end
  def server_side_encryption(value); end
  def server_side_encryption_aws_kms_key_id(value); end
  def server_side_encryption_customer_algorithm(value); end
  def server_side_encryption_customer_key(value); end
  def server_side_encryption_customer_key_starts_with(prefix); end
  def signature(datetime, string_to_sign); end
  def signature_fields(datetime); end
  def starts_with(field_name, value, &block); end
  def storage_class(value); end
  def success_action_redirect(value); end
  def success_action_redirect_starts_with(value); end
  def success_action_status(value); end
  def url; end
  def website_redirect_location(value); end
  def with(field_name, value); end
end
class Aws::S3::Presigner
  def build_signer(cfg); end
  def expires_in(params); end
  def http_scheme(params, virtual_host); end
  def initialize(options = nil); end
  def presigned_url(method, params = nil); end
  def sign_but_dont_send(req, expires_in, scheme); end
  def use_bucket_as_hostname(req); end
end
